/* tslint:disable */
/* eslint-disable */
/**
 * Civ VI City Planner
 * Optomize your civ vi city plans
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Tile,
    TileFromJSON,
    TileFromJSONTyped,
    TileToJSON,
} from './';

/**
 * 
 * @export
 * @interface CityTiles
 */
export interface CityTiles {
    /**
     * 
     * @type {Array<Tile>}
     * @memberof CityTiles
     */
    center?: Array<Tile>;
    /**
     * 
     * @type {Array<Tile>}
     * @memberof CityTiles
     */
    inner?: Array<Tile>;
    /**
     * 
     * @type {Array<Tile>}
     * @memberof CityTiles
     */
    middle?: Array<Tile>;
    /**
     * 
     * @type {Array<Tile>}
     * @memberof CityTiles
     */
    outer?: Array<Tile>;
    /**
     * 
     * @type {Array<Tile>}
     * @memberof CityTiles
     */
    nearby?: Array<Tile>;
}

export function CityTilesFromJSON(json: any): CityTiles {
    return CityTilesFromJSONTyped(json, false);
}

export function CityTilesFromJSONTyped(json: any, ignoreDiscriminator: boolean): CityTiles {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'center': !exists(json, 'center') ? undefined : ((json['center'] as Array<any>).map(TileFromJSON)),
        'inner': !exists(json, 'inner') ? undefined : ((json['inner'] as Array<any>).map(TileFromJSON)),
        'middle': !exists(json, 'middle') ? undefined : ((json['middle'] as Array<any>).map(TileFromJSON)),
        'outer': !exists(json, 'outer') ? undefined : ((json['outer'] as Array<any>).map(TileFromJSON)),
        'nearby': !exists(json, 'nearby') ? undefined : ((json['nearby'] as Array<any>).map(TileFromJSON)),
    };
}

export function CityTilesToJSON(value?: CityTiles | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'center': value.center === undefined ? undefined : ((value.center as Array<any>).map(TileToJSON)),
        'inner': value.inner === undefined ? undefined : ((value.inner as Array<any>).map(TileToJSON)),
        'middle': value.middle === undefined ? undefined : ((value.middle as Array<any>).map(TileToJSON)),
        'outer': value.outer === undefined ? undefined : ((value.outer as Array<any>).map(TileToJSON)),
        'nearby': value.nearby === undefined ? undefined : ((value.nearby as Array<any>).map(TileToJSON)),
    };
}


