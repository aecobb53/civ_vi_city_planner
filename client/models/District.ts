/* tslint:disable */
/* eslint-disable */
/**
 * Civ VI City Planner
 * Optomize your civ vi city plans
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
     CityCenterFromJSONTyped,
     CampusFromJSONTyped,
     TheaterSquareFromJSONTyped,
     HolySiteFromJSONTyped,
     EncampmentFromJSONTyped,
     CommercialHubFromJSONTyped,
     HarborFromJSONTyped,
     IndustrialZoneFromJSONTyped,
     EntertainmentComplexFromJSONTyped,
     WaterParkFromJSONTyped,
     AqueductFromJSONTyped,
     NeighborhoodFromJSONTyped,
     CanalFromJSONTyped,
     DamFromJSONTyped,
     AerodomeFromJSONTyped,
     SpaceportFromJSONTyped,
     GovernmentPlazaFromJSONTyped,
     DiplomaticQuarterFromJSONTyped
} from './';

/**
 * 
 * @export
 * @interface District
 */
export interface District {
    /**
     * 
     * @type {string}
     * @memberof District
     */
    name: string;
    /**
     * 
     * @type {boolean}
     * @memberof District
     */
    powered?: boolean;
}

export function DistrictFromJSON(json: any): District {
    return DistrictFromJSONTyped(json, false);
}

export function DistrictFromJSONTyped(json: any, ignoreDiscriminator: boolean): District {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['name'] === 'CityCenter') {
            return CityCenterFromJSONTyped(json, true);
        }
        if (json['name'] === 'Campus') {
            return CampusFromJSONTyped(json, true);
        }
        if (json['name'] === 'TheaterSquare') {
            return TheaterSquareFromJSONTyped(json, true);
        }
        if (json['name'] === 'HolySite') {
            return HolySiteFromJSONTyped(json, true);
        }
        if (json['name'] === 'Encampment') {
            return EncampmentFromJSONTyped(json, true);
        }
        if (json['name'] === 'CommercialHub') {
            return CommercialHubFromJSONTyped(json, true);
        }
        if (json['name'] === 'Harbor') {
            return HarborFromJSONTyped(json, true);
        }
        if (json['name'] === 'IndustrialZone') {
            return IndustrialZoneFromJSONTyped(json, true);
        }
        if (json['name'] === 'EntertainmentComplex') {
            return EntertainmentComplexFromJSONTyped(json, true);
        }
        if (json['name'] === 'WaterPark') {
            return WaterParkFromJSONTyped(json, true);
        }
        if (json['name'] === 'Aqueduct') {
            return AqueductFromJSONTyped(json, true);
        }
        if (json['name'] === 'Neighborhood') {
            return NeighborhoodFromJSONTyped(json, true);
        }
        if (json['name'] === 'Canal') {
            return CanalFromJSONTyped(json, true);
        }
        if (json['name'] === 'Dam') {
            return DamFromJSONTyped(json, true);
        }
        if (json['name'] === 'Aerodome') {
            return AerodomeFromJSONTyped(json, true);
        }
        if (json['name'] === 'Spaceport') {
            return SpaceportFromJSONTyped(json, true);
        }
        if (json['name'] === 'GovernmentPlaza') {
            return GovernmentPlazaFromJSONTyped(json, true);
        }
        if (json['name'] === 'DiplomaticQuarter') {
            return DiplomaticQuarterFromJSONTyped(json, true);
        }
    }
    return {
        
        'name': json['name'],
        'powered': !exists(json, 'powered') ? undefined : json['powered'],
    };
}

export function DistrictToJSON(value?: District | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'powered': value.powered,
    };
}


