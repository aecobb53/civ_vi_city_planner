/* tslint:disable */
/* eslint-disable */
/**
 * Civ VI City Planner
 * Optomize your civ vi city plans
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    District,
    DistrictFromJSON,
    DistrictFromJSONTyped,
    DistrictToJSON,
    Feature,
    FeatureFromJSON,
    FeatureFromJSONTyped,
    FeatureToJSON,
    Improvement,
    ImprovementFromJSON,
    ImprovementFromJSONTyped,
    ImprovementToJSON,
    Resource,
    ResourceFromJSON,
    ResourceFromJSONTyped,
    ResourceToJSON,
    Terrain,
    TerrainFromJSON,
    TerrainFromJSONTyped,
    TerrainToJSON,
} from './';

/**
 * 
 * @export
 * @interface Tile
 */
export interface Tile {
    /**
     * 
     * @type {Terrain}
     * @memberof Tile
     */
    terrain?: Terrain;
    /**
     * 
     * @type {Feature}
     * @memberof Tile
     */
    feature?: Feature;
    /**
     * 
     * @type {Resource}
     * @memberof Tile
     */
    resource?: Resource;
    /**
     * 
     * @type {Improvement}
     * @memberof Tile
     */
    improvement?: Improvement;
    /**
     * 
     * @type {District}
     * @memberof Tile
     */
    district?: District;
}

export function TileFromJSON(json: any): Tile {
    return TileFromJSONTyped(json, false);
}

export function TileFromJSONTyped(json: any, ignoreDiscriminator: boolean): Tile {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'terrain': !exists(json, 'terrain') ? undefined : TerrainFromJSON(json['terrain']),
        'feature': !exists(json, 'feature') ? undefined : FeatureFromJSON(json['feature']),
        'resource': !exists(json, 'resource') ? undefined : ResourceFromJSON(json['resource']),
        'improvement': !exists(json, 'improvement') ? undefined : ImprovementFromJSON(json['improvement']),
        'district': !exists(json, 'district') ? undefined : DistrictFromJSON(json['district']),
    };
}

export function TileToJSON(value?: Tile | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'terrain': TerrainToJSON(value.terrain),
        'feature': FeatureToJSON(value.feature),
        'resource': ResourceToJSON(value.resource),
        'improvement': ImprovementToJSON(value.improvement),
        'district': DistrictToJSON(value.district),
    };
}


