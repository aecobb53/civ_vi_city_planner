/* tslint:disable */
/* eslint-disable */
/**
 * Civ VI City Planner
 * Optomize your civ vi city plans
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * 
 * @export
 * @enum {string}
 */
export enum Improvement {
    Farm = 'farm',
    Mine = 'mine',
    Quarry = 'quarry',
    Plantation = 'plantation',
    Camp = 'camp',
    Pasture = 'pasture',
    FishingBoats = 'fishing_boats',
    LumberMill = 'lumber_mill',
    Fort = 'fort',
    Airstrip = 'airstrip',
    SeasideResort = 'seaside_resort',
    GeothermalPlant = 'geothermal_plant',
    WindFarm = 'wind_farm',
    SolarFarm = 'solar_farm',
    OffshoreWindFarm = 'offshore_wind_farm',
    SkiResort = 'ski_resort',
    OilWell = 'oil_well',
    OffshoreOilWell = 'offshore_oil_well',
    MissleSilo = 'missle_silo',
    MountainTunnel = 'mountain_tunnel',
    Railroad = 'railroad',
    Seastead = 'seastead',
    Alcazar = 'alcazar',
    Batey = 'batey',
    CahokiaMounds = 'cahokia_mounds',
    ColossalHeads = 'colossal_heads',
    Mahavihara = 'mahavihara',
    Moai = 'moai',
    Monistary = 'monistary',
    NazcaLine = 'nazca_line',
    TradingDome = 'trading_dome',
    Chateau = 'chateau',
    Chemamull = 'chemamull',
    GolfCourse = 'golf_course',
    GreatWall = 'great_wall',
    Hacienda = 'hacienda',
    IceHockyRink = 'ice_hocky_rink',
    Kampung = 'kampung',
    Kurgan = 'kurgan',
    Mekewap = 'mekewap',
    Mission = 'mission',
    NubianPyramid = 'nubian_pyramid',
    OpenAirMuseum = 'open_air_museum',
    OutbackStation = 'outback_station',
    Pa = 'pa',
    Pairirdaeza = 'pairirdaeza',
    Polder = 'polder',
    QhapaqNan = 'qhapaq_nan',
    RockHewnChurch = 'rock_hewn_church',
    RomanFort = 'roman_fort',
    Sphinx = 'sphinx',
    Stepwell = 'stepwell',
    TerraceFarms = 'terrace_farms',
    Ziggurat = 'ziggurat',
    CityPark = 'city_park',
    Fishery = 'fishery'
}

export function ImprovementFromJSON(json: any): Improvement {
    return ImprovementFromJSONTyped(json, false);
}

export function ImprovementFromJSONTyped(json: any, ignoreDiscriminator: boolean): Improvement {
    return json as Improvement;
}

export function ImprovementToJSON(value?: Improvement | null): any {
    return value as any;
}

