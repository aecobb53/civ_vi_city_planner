/* tslint:disable */
/* eslint-disable */
/**
 * Civ VI City Planner
 * Optomize your civ vi city plans
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    City,
    CityFromJSON,
    CityToJSON,
} from '../models';

export interface DefaultApiGetCityPlanRequest {
    cityID: string;
}

export interface DefaultApiUpdateCityPlanRequest {
    city: City;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Returns the optimal city layout
     */
    async getCityPlanRaw(requestParameters: DefaultApiGetCityPlanRequest): Promise<runtime.ApiResponse<City>> {
        if (requestParameters.cityID === null || requestParameters.cityID === undefined) {
            throw new runtime.RequiredError('cityID','Required parameter requestParameters.cityID was null or undefined when calling getCityPlan.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/city_plan`.replace(`{${"cityID"}}`, encodeURIComponent(String(requestParameters.cityID))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => CityFromJSON(jsonValue));
    }

    /**
     * Returns the optimal city layout
     */
    async getCityPlan(requestParameters: DefaultApiGetCityPlanRequest): Promise<City> {
        const response = await this.getCityPlanRaw(requestParameters);
        return await response.value();
    }

    /**
     * Update a city
     */
    async updateCityPlanRaw(requestParameters: DefaultApiUpdateCityPlanRequest): Promise<runtime.ApiResponse<City>> {
        if (requestParameters.city === null || requestParameters.city === undefined) {
            throw new runtime.RequiredError('city','Required parameter requestParameters.city was null or undefined when calling updateCityPlan.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/city_plan`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CityToJSON(requestParameters.city),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => CityFromJSON(jsonValue));
    }

    /**
     * Update a city
     */
    async updateCityPlan(requestParameters: DefaultApiUpdateCityPlanRequest): Promise<City> {
        const response = await this.updateCityPlanRaw(requestParameters);
        return await response.value();
    }

}
